trigger:
  - master
  - test*

resources:
  repositories:
    - repository: AzurePipelineSchemas
      type: github
      endpoint: dearreality
      name: dearreality/AzurePipelineSchemas
      ref: 2fa2574ddf5fc005b77dee08d7ac5023bd624285

variables:
  - group: github
  - group: JfrogPyPi
  - name: packageName
    value: python-sofa
  - template: prepare_internal_version_numbers.yml@AzurePipelineSchemas

name: $(composedVersion)

stages:
- stage: CodeAnalysis
  jobs:
  - job: Style_Guide_Check
    pool:
        vmImage: 'macOS-12'
    steps:
      - script: |
          pip3 install black
          black --check --diff --color $(Build.Repository.LocalPath)
        displayName: Run Format Checks

- stage: Build
  jobs:
  - job: Build_pip_package
    pool:
        vmImage: 'macOS-12'
    steps:
      - task: UsePythonVersion@0
        inputs:
          versionSpec: 3.9 
          addToPath: true 

      - script: |
          pip3 install -r requirements.txt
        displayName: Install python dependencies
        workingDirectory: $(Build.Repository.LocalPath)

      - script: |
          export BENCHMARK_BUTLER_VERSION=$(composedVersion)
          pip3 install wheel
          python3 setup.py bdist_wheel --dist-dir $(Build.Repository.LocalPath)/dist
        displayName: Package python-sofa python module
        workingDirectory: $(Build.Repository.LocalPath)

      - publish: $(Build.Repository.LocalPath)/dist
        artifact: python-sofa-pip-package
        displayName: Publish Pip Artifacts

  - job: Run_Win_Python_Tests
    pool:
        vmImage: 'windows-2019'
    steps:
      - task: UsePythonVersion@0
        inputs:
          versionSpec: 3.9 
          addToPath: true 
    
      - script: |
          pip3 install -r requirements.txt
        displayName: Install python dependencies
        workingDirectory: $(Build.Repository.LocalPath)

- stage: Delivery
  dependsOn: Build
  condition: and(succeeded(), ne(variables['Build.Reason'], 'PullRequest'))
  jobs:
  - job: Upload_pip_package
    pool:
      vmImage: macOS-12
    steps:
    - checkout: AzurePipelineSchemas

    - task: DownloadPipelineArtifact@2
      inputs:
        buildType: current
        path: $(Build.ArtifactStagingDirectory)

    - script: |
        pip3 install twine
      displayName: Install twine

    - task: TwineAuthenticate@1
      inputs:
        pythonUploadServiceConnection: default-pypi-local-upload
      displayName: Twine authenticate

    - script: |
        python3 -m twine upload -r JfrogPypiUpload --config-file $(PYPIRC_PATH) $(Build.ArtifactStagingDirectory)/python-sofa-pip-package/*.whl
      displayName: Upload python package as $(composedVersion)

    - template: set_git_tag.yml@AzurePipelineSchemas
      parameters:
        version: $(composedVersion)
